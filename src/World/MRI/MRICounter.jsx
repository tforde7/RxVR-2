/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 MRICounter.glb --transform 
Files: MRICounter.glb [514.44KB] > C:\Users\tpf1\Desktop\projects\RxVR-2\public\models\mri\MRICounter-transformed.glb [41.18KB] (92%)
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function MRICounter(props) {
  const { nodes, materials } = useGLTF(
    "/models/mri/MRICounter-transformed.glb"
  );
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Array_Table_Teal_0.geometry}
        material={materials.Teal}
        position={[10.2, 1, -0.3]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.Array_Table_White_0.geometry}
        material={materials.White}
        position={[10.2, 1, -0.3]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.Table_Gray_0.geometry}
        material={materials.Gray}
        position={[0, 1, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.Table_Metal_0.geometry}
        material={materials.Metal}
        position={[0, 1, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/models/mri/MRICounter-transformed.glb");
